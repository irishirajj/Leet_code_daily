class Solution {
public:
    int smallfreq(string & a){
        int n=a.size();
        map<char,int>mp;
        for(int i=0;i<n;i++){
            mp[a[i]]++;
        }
        map<char,int>::iterator it=mp.begin();
        return it->second;
    }
    vector<int> numSmallerByFrequency(vector<string>& queries, vector<string>& words) {
        int q=queries.size();
        vector<int>squery;
        for(int i=0;i<q;i++){
            squery.push_back(smallfreq(queries[i]));
        }
        int w=words.size();
        vector<int>swords;
        for(int j=0;j<w;j++){
            swords.push_back(smallfreq(words[j]));
        }
        sort(swords.begin(),swords.end(),greater<int>());
        vector<int>ans;
        for(int k=0;k<q;k++){
            int count=0;
            for(int l=0;l<w;l++){
                if(squery[k]<swords[l]){
                    count++;
                }
                else
                    break;
            }
            ans.push_back(count);
        }
        return ans;
    }
};
